# tox (https://tox.readthedocs.io/) is a tool for running tests
# in multiple virtualenvs. This configuration file will run the
# test suite on all supported python versions. To use it, "pip install tox"
# and then run "tox" from this directory.

[tox]
envlist =
    clean,
    check,
#    docs,
    mypy,
    {py38}-{cover,nocov},
    report
ignore_basepython_conflict = true

[gh-actions]
python =
    3.8: py38, mypy

[testenv]
wheel = true
basepython =
    py38: {env:TOXPYTHON:python3.8}
    {bootstrap,clean,check,report,codecov,coveralls,extension-coveralls}: {env:TOXPYTHON:python3}
setenv =
    PYTHONPATH={toxinidir}/src:{toxinidir}/tests:
    PYTHONUNBUFFERED=yes
passenv =
    *
usedevelop =
    cover: true
    nocov: false
deps =
    gmpy2 >= 2.1.0b4
    numpy == 1.18.2
    pandas == 1.0.4
    hypothesis == 5.9.0
    jsons == 1.1.2
    pytest
    cover: pytest-cov
commands =
    python3 -m pip3 install -e electionguard-python
    cover: python3 setup.py clean --all build_ext --force --inplace
    nocov: {posargs:pytest -vv --ignore=src tests}
    cover: {posargs:pytest --cov --cov-report=term-missing -vv tests}

[testenv:check]
deps =
   docutils
   black
   pylint
   setuptools-scm
skip_install = true
commands =
    python3 -m pip3 install -e electionguard-python
    python3 setup.py check --strict --metadata --restructuredtext
    black -t py38 --check src tests setup.py
    pylint src tests setup.py

# [testenv:docs]
# usedevelop = true
# install_command =
#     python3 -m pip install --no-use-pep517 {opts} {packages}
# deps =
#     -r{toxinidir}/docs/requirements.txt
# commands =
#     sphinx-build {posargs:-E} -b doctest docs dist/docs
#     sphinx-build {posargs:-E} -b html docs dist/docs
#     sphinx-build -b linkcheck docs dist/docs

[testenv:coveralls]
deps =
    coveralls
skip_install = true
commands =
    python3 -m pip3 install -e electionguard-python
    coveralls {env:COVERALLS_EXTRAS:--merge=extension-coveralls.json} []

[testenv:extension-coveralls]
deps =
    cpp-coveralls
skip_install = true
commands =
    python3 -m pip3 install -e electionguard-python
    coveralls --build-root=. --include=src --dump=extension-coveralls.json []

[testenv:codecov]
deps =
    codecov
skip_install = true
commands =
    python3 -m pip3 install -e electionguard-python
    codecov []

[testenv:report]
deps = coverage
skip_install = true
commands =
    python3 -m pip3 install -e electionguard-python
    python3 -m coverage report
    python3 -m coverage html

[testenv:clean]
commands = coverage erase
skip_install = true
deps = coverage

[testenv:mypy]
basepython = python3.8
deps =
    {[testenv]deps}
    mypy==0.770
setenv =
    MYPYPATH = {toxinidir}
ignore_errors = True
whitelist_externals =
    /bin/sh
mypy_paths =
    src 
commands =
    python3 -m pip3 install -e electionguard-python
    mypy {posargs:{[testenv:mypy]mypy_paths}}
